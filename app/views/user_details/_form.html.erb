<%= form_with(url: the_url, model: user_detail, local: true) do |form| %>
  <% if user_detail.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(user_detail.errors.count, "error") %> prohibited this user_detail from being saved:</h2>

      <ul>
      <% user_detail.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

 <div class="new-user-body"> 
  <div class="left-side">
    <div class="field">
      <%= form.label :name %>
      <%= form.text_field :name, class: "name-input" %>
    </div>

    <div class="field">
      <%= form.label :description %>
      <%= form.text_area :description, class: "desc-input" %>
    </div>

      <%# add photos %>
    <div class="field">
      <%= form.label :picture %> <%= form.file_field :picture, accept:
      'image/png,image/gif,image/jpeg,image/jpg', class: "pic-input" %>
    </div>
  </div>

  <div class="right-side">
    <div class="loc">
      <%= form.fields_for :location do |loc_form|%>
      
        <%= loc_form.label :state %>
        <%= loc_form.text_field :state, class: "state-input" %><br><br>

        <%= loc_form.label :postcode %>
        <%= loc_form.text_field :postcode, class: "postcode-input" %><br><br>

        <%= loc_form.label :suburb %>
        <%= loc_form.text_field :suburb, class: "suburb-input" %><br><br>

        <%= loc_form.label :address_line_ %>
        <%= loc_form.text_field :address_line, class: "address-input" %>

      <% end %>
    </div>
    <div class="field">
      <%# enum needs to default to 0 for non-admin, invisible field %>
      <%= form.hidden_field(:user_type, :value => "non_admin") %>
    </div>

    <div class="actions">
      <%= form.submit %>
    </div>
  </div>
</div>
<% end %>

<script type="text/javascript">

  function forceKeyPressUppercase(e)
  {
    var charInput = e.keyCode;
    if((charInput >= 97) && (charInput <= 122)) { // lowercase
      if(!e.ctrlKey && !e.metaKey && !e.altKey) { // no modifier key
        var newChar = charInput - 32;
        var start = e.target.selectionStart;
        var end = e.target.selectionEnd;
        e.target.value = e.target.value.substring(0, start) + String.fromCharCode(newChar) + e.target.value.substring(end);
        e.target.setSelectionRange(start+1, start+1);
        e.preventDefault();
      }
    }
  }

  document.getElementById("user_detail_location_attributes_suburb").addEventListener("keypress", forceKeyPressUppercase, false);
  document.getElementById("user_detail_location_attributes_state").addEventListener("keypress", forceKeyPressUppercase, false);
</script>